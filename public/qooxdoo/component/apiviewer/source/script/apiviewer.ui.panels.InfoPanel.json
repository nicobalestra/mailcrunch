{"attributes": {"isAbstract": true, "hasError": true, "name": "InfoPanel", "hasWarning": true, "packageName": "apiviewer.ui.panels", "superClass": "qx.core.Object", "childClasses": "apiviewer.ui.panels.AppearancePanel,apiviewer.ui.panels.ChildControlsPanel,apiviewer.ui.panels.ClassPanel,apiviewer.ui.panels.ConstantPanel,apiviewer.ui.panels.EventPanel,apiviewer.ui.panels.MethodPanel,apiviewer.ui.panels.PackagePanel,apiviewer.ui.panels.PropertyPanel", "fullName": "apiviewer.ui.panels.InfoPanel", "type": "class"}, "type": "class", "children": [{"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 37, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "listName"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the node list in the class doc node where the items shown by this info panel are stored.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "labelText"}, "type": "param", "children": [{"attributes": {"text": "<p>the label text describing the node type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates an info panel. An info panel shows the information about one item\ntype (e.g. for public methods).</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 992, "hasError": true, "name": "__encodeObject"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "object"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>object</code> is not documented.", "column": 22, "line": 992}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 22, "line": 992}, "type": "error"}]}]}, {"attributes": {"access": "private", "line": 1101, "hasError": true, "name": "__filterItems"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "nodeArr"}, "type": "param", "children": [{"attributes": {"text": "<p>array of class items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {"name": "expandProperties"}, "type": "param"}, {"attributes": {"name": "showProtected"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show protected items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "showPrivate"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show private items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "showInternal"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show internal items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Filter the item list to display only the desired items.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>filtered list of items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>expandProperties</code> is not documented.", "column": 21, "line": 1101}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 1185, "name": "_applyElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "element"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "apiviewer.ui.panels.InfoPanel#element"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>element</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #element}.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 1124, "hasError": true, "name": "_displayNodes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "nodes"}, "type": "param"}, {"attributes": {"name": "currentClassDocNode"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>nodes</code> is not documented.", "column": 21, "line": 1124}, "type": "error"}, {"attributes": {"msg": "Parameter <code>currentClassDocNode</code> is not documented.", "column": 21, "line": 1124}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 21, "line": 1124}, "type": "error"}]}]}, {"attributes": {"access": "protected", "line": 1031, "hasError": true, "name": "_getPanelItems"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "showInherited"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show inherited items</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"name": "showIncluded"}, "type": "param"}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Retuns a list of all items to display in the panel</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>list of all items to display in the panel</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem", "dimensions": 1}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>showIncluded</code> is not documented.", "column": 22, "line": 1031}, "type": "error"}]}]}, {"attributes": {"line": 845, "hasError": true, "name": "canDisplayItem"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "itemNode"}, "type": "param"}]}, {"attributes": {"text": "<p>Whether the panel can display the given item node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the panel can display the given item node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>itemNode</code> is not documented.", "column": 22, "line": 845}, "type": "error"}]}]}, {"attributes": {"line": 1199, "name": "getBodyElement"}, "type": "method", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> node of the body of the panel</p>"}, "type": "desc"}]}, {"attributes": {"name": "getDocNode", "fromProperty": "docNode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>docNode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #docNode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>docNode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getElement", "fromProperty": "element"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>element</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #element}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>element</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>isOpen</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>isOpen</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1212, "hasError": true, "name": "getItemElement"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>the item&#8217;s name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets the <span class=\"caps\">HTML</span> element showing the details of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Contains information for a non-existing parameter <code>panel</code>.", "column": 22, "line": 1212}, "type": "error"}]}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> element showing the details of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Element"}, "type": "entry"}]}]}]}, {"attributes": {"line": 906, "hasError": true, "name": "getItemHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentDocNode"}, "type": "param"}, {"attributes": {"name": "showDetails"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show the details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the information about a class item.\nThe root <span class=\"caps\">HTML</span> element must be a table row (&lt;tr&gt;).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the information about the method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>currentDocNode</code> is not documented.", "column": 19, "line": 906}, "type": "error"}]}]}, {"attributes": {"line": 886, "name": "getItemTextHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}, {"attributes": {"name": "showDetails"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show the details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the description text <span class=\"caps\">HTML</span> string of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the information about the method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 872, "name": "getItemTitleHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the title <span class=\"caps\">HTML</span> string of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the information about the method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 891, "hasError": true, "name": "getItemTooltip"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param"}, {"attributes": {"name": "currentClassDocNode"}, "type": "param"}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>node</code> is not documented.", "column": 22, "line": 891}, "type": "error"}, {"attributes": {"msg": "Parameter <code>currentClassDocNode</code> is not documented.", "column": 22, "line": 891}, "type": "error"}, {"attributes": {"msg": "Documentation is missing.", "column": 22, "line": 891}, "type": "error"}]}]}, {"attributes": {"line": 859, "name": "getItemTypeHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the type <span class=\"caps\">HTML</span> string of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the information about the method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getListName", "fromProperty": "listName"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>listName</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #listName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>listName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1003, "hasError": true, "name": "getPanelHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "viewer"}, "type": "param"}]}, {"attributes": {"text": "<p>Get the <span class=\"caps\">HTML</span> fragment of the info panel</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment of the info panel</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Parameter <code>viewer</code> is not documented.", "column": 20, "line": 1003}, "type": "error"}]}]}, {"attributes": {"line": 1193, "name": "getTitleElement"}, "type": "method", "children": [{"attributes": {"text": "<p><span class=\"caps\">DOM</span> node of the title of the panel</p>"}, "type": "desc"}]}, {"attributes": {"name": "initDocNode", "fromProperty": "docNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>docNode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>docNode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #docNode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initElement", "fromProperty": "element"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>element</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>element</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #element}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>isOpen</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>isOpen</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "initListName", "fromProperty": "listName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>listName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>listName</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #listName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>isOpen</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 989, "name": "itemHasDetails"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Checks whether a class item has details.\nThis method is abstract. Sub classes must override it.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the class item has details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDocNode", "fromProperty": "docNode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>docNode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #docNode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetElement", "fromProperty": "element"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>element</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #element}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>isOpen</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetListName", "fromProperty": "listName"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>listName</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #listName}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDocNode", "fromProperty": "docNode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>docNode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>docNode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #docNode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setElement", "fromProperty": "element"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>element</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>element</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #element}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>isOpen</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>isOpen</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setListName", "fromProperty": "listName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>listName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>listName</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #listName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleIsOpen", "fromProperty": "isOpen"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>isOpen</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #isOpen}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 1236, "hasError": true, "name": "toggleShowItemDetails"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "itemName"}, "type": "param"}, {"attributes": {"name": "fromClassName"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the class the item the item was defined in.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Event handler. Called when the user clicked a button for showing/hiding the\ndetails of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Contains information for a non-existing parameter <code>panelHashCode</code>.", "column": 29, "line": 1236}, "type": "error"}, {"attributes": {"msg": "Contains information for a non-existing parameter <code>name</code>.", "column": 29, "line": 1236}, "type": "error"}, {"attributes": {"msg": "Parameter <code>itemName</code> is not documented.", "column": 29, "line": 1236}, "type": "error"}]}]}, {"attributes": {"line": 1158, "name": "update"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "classViewer"}, "type": "param", "children": [{"attributes": {"text": "<p>parent class viewer widget.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.ui.ClassViewer"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Updates an info panel.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "apiviewer.dao.Node", "allowNull": "true", "hasError": true, "name": "docNode", "propertyType": "new"}, "type": "property", "children": [{"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Documentation is missing.", "column": 3, "line": 46}, "type": "error"}]}]}, {"attributes": {"name": "element", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_applyElement", "check": "Element"}, "type": "property", "children": [{"attributes": {"text": "<p>top level <span class=\"caps\">DOM</span> node of the panel</p>"}, "type": "desc"}]}, {"attributes": {"check": "Boolean", "defaultValue": "true", "name": "isOpen", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>whether the info panel is open</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "name": "listName", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>The name of the list containing the items in the tree data structure</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"access": "private", "line": 490, "isStatic": true, "name": "__extractFirstSentence"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "text"}, "type": "param", "children": [{"attributes": {"text": "<p>the text.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Extracts the first sentence from a text.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the first sentence from the text.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "private", "line": 433, "isStatic": true, "name": "__getItemFromClassHierarchy"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "itemName"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "baseClassNode"}, "type": "param", "children": [{"attributes": {"text": "<p>class doc node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets a class item from baseClassNode. if it is not found there, the class&#8217; hierarchy is searched until the item is found.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the classItem</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"line": 688, "isStatic": true, "name": "createAccessHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the access protection for a class item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> fragment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "hasError": true, "line": 779, "name": "createAttachedFrom"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "method"}, "type": "param"}]}, {"attributes": {"text": "<p>Creates the link to class where the method has been attached from.</p>"}, "type": "desc"}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Contains information for a non-existing parameter <code>node</code>.", "column": 26, "line": 779}, "type": "error"}, {"attributes": {"msg": "Parameter <code>method</code> is not documented.", "column": 26, "line": 779}, "type": "error"}]}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 661, "isStatic": true, "name": "createDeprecationHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "itemName"}, "type": "param", "children": [{"attributes": {"text": "<p>type of the item, e.g. &#8220;method&#8221;, &#8220;property&#8221;, &#8220;constant&#8221;, ...</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing whether the item is deprecated</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> fragment.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 466, "isStatic": true, "name": "createDescriptionHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Node"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "packageBaseClass"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the class to use for auto-adding packages.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}, {"attributes": {"type": "apiviewer.dao.Package"}, "type": "entry"}]}]}, {"attributes": {"name": "showDetails"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to show details. If <code>false</code> only the first sentence of the description will be shown.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the description of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 621, "isStatic": true, "name": "createErrorHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Node"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the currently displayed class</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the documentation errors of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the documentation errors.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 405, "isStatic": true, "name": "createIncludedFromHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>item to get the the information from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the current class shown in the class viewer</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing whether the item is included from a mixin</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 719, "isStatic": true, "name": "createInfoRequiredByHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing interfaces requiring this node</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 351, "isStatic": true, "name": "createInheritedFromHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>item to get the information from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "currentClassDocNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the current class shown in the class viewer</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing information about inheritance</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 133, "isStatic": true, "name": "createItemLinkHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "linkText"}, "type": "param", "children": [{"attributes": {"text": "<p>the link text (e.g. &#8220;mypackage.MyClass#myMethod alt text&#8221;)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "packageBaseClass"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the class to use when auto-adding the package to a class name having no package specified. If null, no automatic package addition is done.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "useIcon"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to add an icon to the link.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "false", "name": "useShortName"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to use the short name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> for a link to an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment of the link</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 379, "isStatic": true, "name": "createOverwriddenFromHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>item to get the the information from</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing whether the item is overridden</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 312, "isStatic": true, "name": "createSeeAlsoHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the &#64;see attributes of an item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the &#64;see attributes.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 743, "isStatic": true, "name": "createSourceLinkHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the link to the source file that definen an item</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 542, "isStatic": true, "name": "createTypeHtml"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "typeNode"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node to show the type for.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.ClassItem"}, "type": "entry"}]}]}, {"attributes": {"name": "defaultType"}, "type": "param", "children": [{"attributes": {"text": "<p>the type name to use if <code>typeNode</code> is <code>null</code> or defines no type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "useShortName"}, "type": "param", "children": [{"attributes": {"text": "<p>whether to use short class names (without package).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates the <span class=\"caps\">HTML</span> showing the type of a doc node.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the <span class=\"caps\">HTML</span> showing the type.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 519, "isStatic": true, "name": "descriptionHasDetails"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Node"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns whether the description of an item has details (has more than one\nsentence).</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>whether the description of an item has details.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 816, "isStatic": true, "name": "getItemCssClasses"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>class doc node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Gets <span class=\"caps\">CSS</span> classes for a class item</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">CSS</span> classes separated by &#8221; &#8221;</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 95, "isStatic": true, "name": "resolveLinkAttributes"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "description"}, "type": "param", "children": [{"attributes": {"text": "<p>the description.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "packageBaseClass"}, "type": "param", "children": [{"attributes": {"text": "<p>the doc node of the class to use for auto-adding packages.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Creates <span class=\"caps\">HTML</span> that replaces all &#64;link-attributes with links.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTML</span> fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 802, "isStatic": true, "name": "setTitleClass"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "node"}, "type": "param", "children": [{"attributes": {"text": "<p>class doc node</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "apiviewer.dao.Class"}, "type": "entry"}]}]}, {"attributes": {"name": "title"}, "type": "param", "children": [{"attributes": {"text": "<p>original title</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Wraps a <span class=\"caps\">HTML</span> fragment with a &#8220;span&#8221; element with <span class=\"caps\">CSS</span> classes for\nthe item.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p><span class=\"caps\">HMTL</span> fragment</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"type": "Regexp", "name": "SENTENCE_END_REGEX", "value": "/[^\\.].\\.(\\s|<)/"}, "type": "constant", "children": [{"attributes": {"text": "<p>{regexp} The regexp that finds the end of a sentence.</p>"}, "type": "desc"}]}, {"attributes": {"type": "Regexp", "name": "ITEM_SPEC_REGEX", "value": "/^(([\\w\\.]+)?(#\\w+(\\([^\\)]*\\))?)?)(\\s+(.*))?$/"}, "type": "constant", "children": [{"attributes": {"text": "<p>{regexp} The regexp for parsing a item name\n(e.g. &#8220;mypackage.MyClass#MY_CONSTANT alternative text&#8221;).</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "errors", "children": [{"attributes": {"msg": "Class documentation is missing.", "column": 17, "line": 23}, "type": "error"}]}]}